### YamlMime:ManagedReference
items:
- uid: NetFoundry.ZitiStream
  commentId: T:NetFoundry.ZitiStream
  id: ZitiStream
  parent: NetFoundry
  children:
  - NetFoundry.ZitiStream.#ctor(NetFoundry.ZitiConnection)
  - NetFoundry.ZitiStream.CanRead
  - NetFoundry.ZitiStream.CanSeek
  - NetFoundry.ZitiStream.CanWrite
  - NetFoundry.ZitiStream.Dispose(System.Boolean)
  - NetFoundry.ZitiStream.Flush
  - NetFoundry.ZitiStream.Length
  - NetFoundry.ZitiStream.Position
  - NetFoundry.ZitiStream.PumpAsync(Stream)
  - NetFoundry.ZitiStream.PumpAsync(Stream,Stream)
  - NetFoundry.ZitiStream.Read(System.Byte[],System.Int32,System.Int32)
  - NetFoundry.ZitiStream.Seek(System.Int64,SeekOrigin)
  - NetFoundry.ZitiStream.SetLength(System.Int64)
  - NetFoundry.ZitiStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ZitiStream
  nameWithType: ZitiStream
  fullName: NetFoundry.ZitiStream
  type: Class
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: ZitiStream
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 12
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nA representation of a standard <see cref=\"!:System.IO.Stream\"></see> which utilizes the NetFoundry network\n"
  example: []
  syntax:
    content: 'public class ZitiStream : Stream'
    content.vb: >-
      Public Class ZitiStream
          Inherits Stream
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetFoundry.ZitiStream.#ctor(NetFoundry.ZitiConnection)
  commentId: M:NetFoundry.ZitiStream.#ctor(NetFoundry.ZitiConnection)
  id: '#ctor(NetFoundry.ZitiConnection)'
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: ZitiStream(ZitiConnection)
  nameWithType: ZitiStream.ZitiStream(ZitiConnection)
  fullName: NetFoundry.ZitiStream.ZitiStream(NetFoundry.ZitiConnection)
  type: Constructor
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: .ctor
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 22
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nCreates a <xref href=\"NetFoundry.ZitiStream\" data-throw-if-not-resolved=\"false\"></xref> from the provided <xref href=\"NetFoundry.ZitiConnection\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public ZitiStream(ZitiConnection conn)
    parameters:
    - id: conn
      type: NetFoundry.ZitiConnection
      description: 'The <xref href="NetFoundry.ZitiConnection" data-throw-if-not-resolved="false"></xref> to create a <xref href="NetFoundry.ZitiStream" data-throw-if-not-resolved="false"></xref> from '
    content.vb: Public Sub New(conn As ZitiConnection)
  overload: NetFoundry.ZitiStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetFoundry.ZitiStream.CanRead
  commentId: P:NetFoundry.ZitiStream.CanRead
  id: CanRead
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: ZitiStream.CanRead
  fullName: NetFoundry.ZitiStream.CanRead
  type: Property
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: CanRead
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 31
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nIndicates if the stream can be read from\n"
  example: []
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: NetFoundry.ZitiStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NetFoundry.ZitiStream.CanSeek
  commentId: P:NetFoundry.ZitiStream.CanSeek
  id: CanSeek
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: ZitiStream.CanSeek
  fullName: NetFoundry.ZitiStream.CanSeek
  type: Property
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: CanSeek
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 42
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nSeeking is not supported\n"
  example: []
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overload: NetFoundry.ZitiStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NetFoundry.ZitiStream.CanWrite
  commentId: P:NetFoundry.ZitiStream.CanWrite
  id: CanWrite
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: ZitiStream.CanWrite
  fullName: NetFoundry.ZitiStream.CanWrite
  type: Property
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: CanWrite
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 53
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nindicates if the stream is ready for writing\n"
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: NetFoundry.ZitiStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NetFoundry.ZitiStream.Length
  commentId: P:NetFoundry.ZitiStream.Length
  id: Length
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ZitiStream.Length
  fullName: NetFoundry.ZitiStream.Length
  type: Property
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Length
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 64
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nunsupported - always returns 0\n"
  example: []
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides ReadOnly Property Length As Long
  overload: NetFoundry.ZitiStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NetFoundry.ZitiStream.Position
  commentId: P:NetFoundry.ZitiStream.Position
  id: Position
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ZitiStream.Position
  fullName: NetFoundry.ZitiStream.Position
  type: Property
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Position
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 76
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nunsupported - always returns 0\n"
  example: []
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Position As Long
  overload: NetFoundry.ZitiStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: NetFoundry.ZitiStream.Flush
  commentId: M:NetFoundry.ZitiStream.Flush
  id: Flush
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ZitiStream.Flush()
  fullName: NetFoundry.ZitiStream.Flush()
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Flush
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 90
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nFlushes bytes\n"
  example: []
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overload: NetFoundry.ZitiStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NetFoundry.ZitiStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:NetFoundry.ZitiStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: ZitiStream.Read(Byte[], Int32, Int32)
  fullName: NetFoundry.ZitiStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Read
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 109
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nReads data into the provided buffer\n"
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to read data into
    - id: offset
      type: System.Int32
      description: The position in the bufer to begin appending data
    - id: count
      type: System.Int32
      description: The number of bytes to append
    return:
      type: System.Int32
      description: Returns the number of bytes read
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: NetFoundry.ZitiStream.Read*
  nameWithType.vb: ZitiStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: NetFoundry.ZitiStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: NetFoundry.ZitiStream.Seek(System.Int64,SeekOrigin)
  commentId: M:NetFoundry.ZitiStream.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: ZitiStream.Seek(Int64, SeekOrigin)
  fullName: NetFoundry.ZitiStream.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Seek
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 191
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nunsupported\n"
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overload: NetFoundry.ZitiStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NetFoundry.ZitiStream.SetLength(System.Int64)
  commentId: M:NetFoundry.ZitiStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: ZitiStream.SetLength(Int64)
  fullName: NetFoundry.ZitiStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: SetLength
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 199
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nunsupported\n"
  example: []
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overload: NetFoundry.ZitiStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NetFoundry.ZitiStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:NetFoundry.ZitiStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: ZitiStream.Write(Byte[], Int32, Int32)
  fullName: NetFoundry.ZitiStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Write
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 214
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nWrites the provided buffer over the ZitiNetwork\n"
  example: []
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer containing data to write
    - id: offset
      type: System.Int32
      description: The position in the buffer to read from
    - id: count
      type: System.Int32
      description: The number of bytes to write from the buffer
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overload: NetFoundry.ZitiStream.Write*
  nameWithType.vb: ZitiStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: NetFoundry.ZitiStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: NetFoundry.ZitiStream.Dispose(System.Boolean)
  commentId: M:NetFoundry.ZitiStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ZitiStream.Dispose(Boolean)
  fullName: NetFoundry.ZitiStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: Dispose
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 268
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nDisposes of the <xref href=\"NetFoundry.ZitiStream\" data-throw-if-not-resolved=\"false\"></xref>, cleaning up any retained resources\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overload: NetFoundry.ZitiStream.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NetFoundry.ZitiStream.PumpAsync(Stream,Stream)
  commentId: M:NetFoundry.ZitiStream.PumpAsync(Stream,Stream)
  id: PumpAsync(Stream,Stream)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: PumpAsync(Stream, Stream)
  nameWithType: ZitiStream.PumpAsync(Stream, Stream)
  fullName: NetFoundry.ZitiStream.PumpAsync(Stream, Stream)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: PumpAsync
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 279
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nAsynchronously pumps data between the input <see cref=\"!:System.IO.Stream\"></see> and destination <see cref=\"!:System.IO.Stream\"></see>\n"
  example: []
  syntax:
    content: public static Task PumpAsync(Stream input, Stream destination)
    parameters:
    - id: input
      type: Stream
      description: The input stream
    - id: destination
      type: Stream
      description: The destination stream
    return:
      type: Task
      description: A <see cref="!:System.Threading.Tasks.Task"></see> which is awaitable
    content.vb: Public Shared Function PumpAsync(input As Stream, destination As Stream) As Task
  overload: NetFoundry.ZitiStream.PumpAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetFoundry.ZitiStream.PumpAsync(Stream)
  commentId: M:NetFoundry.ZitiStream.PumpAsync(Stream)
  id: PumpAsync(Stream)
  parent: NetFoundry.ZitiStream
  langs:
  - csharp
  - vb
  name: PumpAsync(Stream)
  nameWithType: ZitiStream.PumpAsync(Stream)
  fullName: NetFoundry.ZitiStream.PumpAsync(Stream)
  type: Method
  source:
    remote:
      path: docfx_project/aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
      branch: master
      repo: git@github.com:NetFoundry/ziti-doc.git
    id: PumpAsync
    path: aggregatedSources/csharp/src/NetFoundry/ZitiStream.cs
    startLine: 300
  assemblies:
  - Ziti.NET.Standard
  namespace: NetFoundry
  summary: "\nAsynchronously pumps this <xref href=\"NetFoundry.ZitiStream\" data-throw-if-not-resolved=\"false\"></xref> to/from the destination <see cref=\"!:System.IO.Stream\"></see>\n"
  example: []
  syntax:
    content: public Task PumpAsync(Stream destination)
    parameters:
    - id: destination
      type: Stream
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function PumpAsync(destination As Stream) As Task
  overload: NetFoundry.ZitiStream.PumpAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NetFoundry
  commentId: N:NetFoundry
  name: NetFoundry
  nameWithType: NetFoundry
  fullName: NetFoundry
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetFoundry.ZitiStream
  commentId: T:NetFoundry.ZitiStream
  name: ZitiStream
  nameWithType: ZitiStream
  fullName: NetFoundry.ZitiStream
- uid: NetFoundry.ZitiConnection
  commentId: T:NetFoundry.ZitiConnection
  parent: NetFoundry
  name: ZitiConnection
  nameWithType: ZitiConnection
  fullName: NetFoundry.ZitiConnection
- uid: NetFoundry.ZitiStream.#ctor*
  commentId: Overload:NetFoundry.ZitiStream.#ctor
  name: ZitiStream
  nameWithType: ZitiStream.ZitiStream
  fullName: NetFoundry.ZitiStream.ZitiStream
- uid: NetFoundry.ZitiStream.CanRead*
  commentId: Overload:NetFoundry.ZitiStream.CanRead
  name: CanRead
  nameWithType: ZitiStream.CanRead
  fullName: NetFoundry.ZitiStream.CanRead
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NetFoundry.ZitiStream.CanSeek*
  commentId: Overload:NetFoundry.ZitiStream.CanSeek
  name: CanSeek
  nameWithType: ZitiStream.CanSeek
  fullName: NetFoundry.ZitiStream.CanSeek
- uid: NetFoundry.ZitiStream.CanWrite*
  commentId: Overload:NetFoundry.ZitiStream.CanWrite
  name: CanWrite
  nameWithType: ZitiStream.CanWrite
  fullName: NetFoundry.ZitiStream.CanWrite
- uid: NetFoundry.ZitiStream.Length*
  commentId: Overload:NetFoundry.ZitiStream.Length
  name: Length
  nameWithType: ZitiStream.Length
  fullName: NetFoundry.ZitiStream.Length
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NetFoundry.ZitiStream.Position*
  commentId: Overload:NetFoundry.ZitiStream.Position
  name: Position
  nameWithType: ZitiStream.Position
  fullName: NetFoundry.ZitiStream.Position
- uid: NetFoundry.ZitiStream.Flush*
  commentId: Overload:NetFoundry.ZitiStream.Flush
  name: Flush
  nameWithType: ZitiStream.Flush
  fullName: NetFoundry.ZitiStream.Flush
- uid: NetFoundry.ZitiStream.Read*
  commentId: Overload:NetFoundry.ZitiStream.Read
  name: Read
  nameWithType: ZitiStream.Read
  fullName: NetFoundry.ZitiStream.Read
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetFoundry.ZitiStream.Seek*
  commentId: Overload:NetFoundry.ZitiStream.Seek
  name: Seek
  nameWithType: ZitiStream.Seek
  fullName: NetFoundry.ZitiStream.Seek
- uid: SeekOrigin
  commentId: '!:SeekOrigin'
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
- uid: NetFoundry.ZitiStream.SetLength*
  commentId: Overload:NetFoundry.ZitiStream.SetLength
  name: SetLength
  nameWithType: ZitiStream.SetLength
  fullName: NetFoundry.ZitiStream.SetLength
- uid: NetFoundry.ZitiStream.Write*
  commentId: Overload:NetFoundry.ZitiStream.Write
  name: Write
  nameWithType: ZitiStream.Write
  fullName: NetFoundry.ZitiStream.Write
- uid: NetFoundry.ZitiStream.Dispose*
  commentId: Overload:NetFoundry.ZitiStream.Dispose
  name: Dispose
  nameWithType: ZitiStream.Dispose
  fullName: NetFoundry.ZitiStream.Dispose
- uid: NetFoundry.ZitiStream.PumpAsync*
  commentId: Overload:NetFoundry.ZitiStream.PumpAsync
  name: PumpAsync
  nameWithType: ZitiStream.PumpAsync
  fullName: NetFoundry.ZitiStream.PumpAsync
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
